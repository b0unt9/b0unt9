---
type Props = {
  title: string;
  description?: string;
  link?: {
    name: string;
    url: string;
  }[];
  tags?: string[];
};

const { title, description, link, tags } = Astro.props;
---

<span class="project">
	<h2>{title}</h2>
  {description && <p>{description}</p>}
  {
    tags && (
      <div class="tags">
        {tags.map((tag) => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    )
  }
  {link && link.map(({ name, url }) => (
    <a href={url} target="_blank">{name} >></a>
  ))}
</span>

<style lang="scss">
  .project {
    display: block;
    padding: 2rem;
    margin: 0.5rem 0;
    border: none;
    background-color: transparent;
    transition: background-color 0.5s ease-out;

    @media screen and (max-width: 640px) {
      padding: 2rem 0;
    }

    &:hover {
      background-color: #fff;
      border: none;
      border-radius: 5px;
      box-shadow: 0 10px 15px -22px rgba(0, 0, 0, 0.1);

      @media (prefers-color-scheme: dark) {
        background: #2a2a2a;
      }

      @media screen and (max-width: 640px) {
        background-color: transparent;
        border: none;
        box-shadow: none;
        @media (prefers-color-scheme: dark) {
          background-color: transparent;
        }
      }
    }
  }

  h2 {
    font-size: 1.7rem;
    font-weight: 500;
  }

  p {
    padding: 0.3rem 0;
    line-height: 1.8;
  }

  .small {
    font-size: 1.4rem;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
  }

  .tag {
    font-size: 1.3rem;
    padding: 3px 10px;
    background-color: #dfdfdf;
    margin-right: 10px;
    border-radius: 50px;
    white-space: nowrap;
    display: block;

    @media (prefers-color-scheme: dark) {
      background-color: #414141;
    }
  }

  a {
    margin-right: 20px;
    border-bottom: 0;
    border-bottom: 1.5px solid var(--accent-color);
  }
</style>